from backend.nlu_module import generate_gemini_response

prompt = """You are an expert in converting English questions to SQL code! The SQL database has the name it_tickets and has the following columns - ticket_id, date_opened, issue_type, priority, assigned_to, status, date_closed, department, and description.\n\nFor example,\nExample 1 - How many open tickets are there?, the SQL command will be something like this\nSELECT COUNT(*) FROM it_tickets WHERE status = 'Open';\n\nExample 2 - How many high-priority tickets have been assigned to John Doe?\nSELECT COUNT(*) FROM it_tickets WHERE priority = 'High' AND assigned_to = 'John Doe';\n\nExample 3 - Which ticket has been open for the longest time?\nSELECT ticket_id FROM it_tickets WHERE date_opened = (SELECT MIN(date_opened) FROM it_tickets) AND status = 'Open';\n\nExample 4 - How many tickets were closed in the Finance department?\nSELECT COUNT(*) FROM it_tickets WHERE department = 'Finance' AND status = 'Closed';\n\nExample 5 - List the description of tickets assigned to Sarah Chen that are still in progress?\nSELECT description FROM it_tickets WHERE assigned_to = 'Sarah Chen' AND status = 'In Progress';\n\nExample 6 - How many tickets have been closed with a priority of 'Low'?\nSELECT COUNT(*) FROM it_tickets WHERE status = 'Closed' AND priority = 'Low';\n\nExample 7 - What are the departments with the most number of high-priority tickets?\nSELECT department, COUNT(*) FROM it_tickets WHERE priority = 'High' GROUP BY department ORDER BY COUNT(*) DESC;\n\nExample 8 - Which tickets have been assigned to both John Doe and Michael Lee at some point?\nSELECT ticket_id FROM it_tickets WHERE assigned_to IN ('John Doe', 'Michael Lee') GROUP BY ticket_id HAVING COUNT(DISTINCT assigned_to) = 2;\n\nExample 9 - What is the average time taken to close high-priority tickets?\nSELECT AVG(JULIANDAY(date_closed) - JULIANDAY(date_opened)) AS avg_time FROM it_tickets WHERE priority = 'High' AND status = 'Closed';\n\nExample 10 - List all tickets that were opened before March 2024 but are still not closed?\nSELECT * FROM it_tickets WHERE date_opened < '2024-03-01' AND status != 'Closed';"""

def translate_to_sql(question):
    sql_query = generate_gemini_response(question, prompt)
    sql_query_cleaned = sql_query.replace('```sql', '').replace('```', '').strip()
    return sql_query_cleaned
